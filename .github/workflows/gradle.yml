name: Auto Merge on Review Approval

on:
  # 리뷰 제출 시 워크플로우 트리거를 위한 이벤트 수정
  pull_request_review:
    types: [submitted]

jobs:
  check-approvals:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Check PR Approvals
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # pull_request_review 이벤트에서 PR 번호를 GITHUB_EVENT_PATH에서 직접 가져옴
          PR_NUMBER=$(jq '.pull_request.number' "$GITHUB_EVENT_PATH")

          # 모든 리뷰 상태 가져오기
          REVIEWS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews")

          # 승인된 리뷰어 수 확인
          APPROVAL_COUNT=$(echo "$REVIEWS" | jq '[.[] | select(.state == "APPROVED")] | length')

          # 필요한 승인 수 정의 (여기서는 1명의 리뷰어 승인으로 설정)
          REQUIRED_APPROVALS=1

          if [ "$APPROVAL_COUNT" -ge "$REQUIRED_APPROVALS" ]; then
            echo "All required approvals have been met."
            # 출력 형식 수정: set-output 구문을 올바르게 사용
            echo "::set-output name=approved::true"
          else
            echo "Not all required approvals have been met."
            echo "::set-output name=approved::false"
          fi

      - name: Merge Pull Request
        # 승인된 경우에만 이 단계가 실행되도록 if 조건 추가
        if: steps.check-approvals.outputs.approved == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # PR 번호를 이벤트 데이터에서 가져옴
          PR_NUMBER=$(jq '.pull_request.number' "$GITHUB_EVENT_PATH")
          
          # 승인된 PR을 자동으로 머지
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
               -d '{"merge_method":"merge"}'
