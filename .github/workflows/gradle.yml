name: Auto Merge PR on Approval

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check PR Approval Status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 현재 PR 번호 가져오기
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          
          # 모든 리뷰 상태 가져오기
          REVIEWS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews")
          
          # 승인된 리뷰어 수 확인
          APPROVAL_COUNT=$(echo "$REVIEWS" | jq '[.[] | select(.state == "APPROVED")] | length')

          # 필요한 승인 수 정의 (예: 1명)
          REQUIRED_APPROVALS=1

          if [ "$APPROVAL_COUNT" -ge "$REQUIRED_APPROVALS" ]; then
            echo "All required approvals have been met."
            echo "approved=true" >> $GITHUB_ENV
          else
            echo "Not all required approvals have been met."
            echo "approved=false" >> $GITHUB_ENV
          fi

      - name: Merge the Pull Request
        if: env.approved == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
               -d '{"merge_method":"merge"}'
